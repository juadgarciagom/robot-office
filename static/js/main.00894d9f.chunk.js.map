{"version":3,"sources":["components/card/Card.jsx","components/card-list/CardList.jsx","components/search-box/SearchBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","robot","id","alt","name","email","CardList","robots","map","SearchBox","console","log","type","placeholder","onChange","search","App","state","searchField","fetch","then","response","json","users","setState","this","filteredRobot","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TAGaA,EAAO,SAACC,GAEjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,MAAMC,GAAtC,iBAAyDC,IAAI,KACvE,6BAAKL,EAAMG,MAAMG,OACjB,4BAAIN,EAAMG,MAAMI,YCHbC,EAAW,SAACR,GAEvB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,OAAOC,KAAI,SAACP,GAAD,OAChB,cAAC,EAAD,CAAsBA,MAAOA,GAAlBA,EAAMC,UCPZO,G,MAAY,SAACX,GAEtB,OADAY,QAAQC,IAAIb,GAER,uBACEC,UAAU,SACVa,KAAK,SACLC,YAAaf,EAAMe,YACnBC,SAAUhB,EAAMiB,WC4BXC,E,kDAjCb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXV,OAAQ,GACRW,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKC,SAAS,CAAEjB,OAAQgB,S,oBAG7C,WAAU,IAAD,OACP,EAAgCE,KAAKR,MAA7BV,EAAR,EAAQA,OAAQW,EAAhB,EAAgBA,YACVQ,EAAgBnB,EAAOoB,QAAO,SAAC1B,GAAD,OAClCA,EAAMG,KAAKwB,cAAcC,SAASX,EAAYU,kBAEhD,OACE,sBAAK7B,UAAU,MAAf,UACE,8CACA,cAAC,EAAD,CACEc,YAAY,gBACZE,OAAQ,SAACe,GAAD,OAAO,EAAKN,SAAS,CAAEN,YAAaY,EAAEC,OAAOC,WAEvD,cAAC,EAAD,CAAUzB,OAAQmB,W,GA5BRO,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.00894d9f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport '../card/card.css'\r\nexport const Card = (props) => {\r\n    \r\n    return (\r\n        <div className=\"card_container\">\r\n            <img src={`https://robohash.org/${props.robot.id}?size=180x180`} alt=\"\" />\r\n          <h2>{props.robot.name}</h2>\r\n          <p>{props.robot.email}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from \"react\";\r\n\r\n\r\nimport \"../card-list/card-list.css\";\r\nimport { Card } from \"../card/Card\";\r\n\r\nexport const CardList = (props) => {\r\n  \r\n  return (\r\n    <div className=\"card_list\">\r\n      {props.robots.map((robot) => (\r\n        <Card key={robot.id}  robot={robot}/>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\nimport '../search-box/search-box.css'\r\n\r\nexport const SearchBox = (props) => {\r\n    console.log(props);\r\n    return (\r\n        <input\r\n          className='search'\r\n          type=\"search\"\r\n          placeholder={props.placeholder}\r\n          onChange={props.search}\r\n        />\r\n    )\r\n}\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { CardList } from \"./components/card-list/CardList\";\nimport { SearchBox } from \"./components/search-box/SearchBox\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      robots: [],\n      searchField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ robots: users }));\n  }\n\n  render() {\n    const { robots, searchField } = this.state;\n    const filteredRobot = robots.filter((robot) =>\n      robot.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Robot Office</h1>\n        <SearchBox \n          placeholder='Search Robots'\n          search={(e) => this.setState({ searchField: e.target.value })}\n        />\n        <CardList robots={filteredRobot} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}